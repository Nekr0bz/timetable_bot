version: "3.9"

x-common-variables: &common-variables
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  DATABASE_HOST: ${POSTGRES_HOST}

services:
  dev: &dev
    container_name: timetable_dev
    profiles:
      - dev
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    volumes:
      - .:/opt/app
    working_dir: /opt/app
    environment:
      <<: *common-variables
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    depends_on:
      - db
    networks:
      - timetable
    command: go run cmd/cli/main.go bot run

  scheduler:
    <<: *dev
    container_name: timetable_scheduler
    build:
      dockerfile: Dockerfile
      context: .
      target: built
    profiles:
      - app
    command: app parser scheduler

  bot:
    <<: *dev
    container_name: timetable_bot
    build:
      dockerfile: Dockerfile
      context: .
      target: built
    profiles:
      - app
    command: app bot run

  db:
    container_name: timetable_postgres
    image: postgres:13-alpine
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      <<: *common-variables
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    networks:
      - timetable

  migrate: &basemigrate
    container_name: timetable_migrate
    profiles: [ "tools" ]
    image: migrate/migrate
    entrypoint: "migrate -database postgresql://${POSTGRES_USER}@db/${POSTGRES_DB}?sslmode=disable -path /tmp/migrations"
    command: up
    links:
      - db
    volumes:
      - ./migrations:/tmp/migrations
    networks:
      - timetable

  create-migration:
    <<: *basemigrate
    container_name: timetable_create_migration
    entrypoint: migrate create -dir /tmp/migrations -ext sql
    command: ""

volumes:
  data:

networks:
  timetable:
    driver: bridge

